$schema: "https://json-schema.org/draft/07/schema"
$id: "https://teagantotally.rocks/deepthought/meta/meta-datatype"
title: Meta DataType schema validating meta-schema

type:
  - object
  - boolean
definitions:
  typeSchema:
    type: string
    enum:
      - boolean
      - string
      - integer
      - unsigned_integer
      - short
      - unsigned_short
      - long
      - unsigned_long
      - float
      - double
  implicitPrecisionSchema:
    type: number
  explicitPrecisionSchema:
    type: string
    pattern: "^[0-9]*\.[0-9]* [a-z_]+$"
  simpleUnitSchema:
    type: string
    pattern: "[a-z][a-z_]+"
  productUnitSchema:
    type: object
    properties:
      unit1:
        $ref: "#/definitions/compoundUnitSchema"
      unit2:
        $ref: "#/definitions/compoundUnitSchema"
    required:
      - unit1
      - unit2
  inverseUnitShema:
    type: object
    properties:
      inverseUnit:
        $ref: "#/definitions/compoundUnitSchema"
    required:
      - inverseUnit
  exponentUnitSchema:
    type: object
    properties:
      unit:
        $ref: "#/definitions/compoundUnitSchema"
      exponent:
        type: number
  groupUnitSchema:
    type: object
    properties:
      groupedUnits:
        $ref: "#/definitions/compoundUnitSchema"
    required:
      - groupedUnits
  compoundUnitSchema:
    anyOf:
      - $ref: "#/definitions/simpleUnitSchema"
      - $ref: "#/definitions/productUnitSchema"
      - $ref: "#/definitions/exponentUnitSchema"
      - $ref: "#/definitions/inverseUnitSchema"
      - $ref: "#/definitions/groupUnitSchema"
properties:
  type:
    $ref: "#/definitions/typeSchema"
  name:
    type: string
    minLength: 1
    pattern: "^[A-Z][a-zA-Z_- ]+$"
  description:
    type: string
    minLength: 1
  unit:
    $ref: "#/definitions/compountUnitSchema"
  coerce:
    type: boolean
    default: true
  precision:
    oneOf:
      - $ref: "#/definitions/implicitPrecisionSchema"
      - $ref: "#/definitions/explicitPrecisionSchema"
required:
  - type
  - name
  - description
default: true